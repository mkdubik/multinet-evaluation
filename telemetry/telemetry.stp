global tmp_ts
global start
global dataset

function timestamp:long(ts) {
  return gettimeofday_ms() - ts
}

global params

/* START OF LART INSTRUMENTATION */
probe process("libmultinet.so").mark("lart_start")
{
  start = gettimeofday_ms();
  dataset = user_string($arg1);
  printf("lart,%s,", dataset);
}

probe process("libmultinet.so").mark("lart_ac_start")
{
  system(sprintf("cat /proc/%d/status > telemetry/lart_%s.log", pid(), dataset));
}

probe process("libmultinet.so").mark("lart_end")
{
  printf("%d\n", timestamp(start));
  delete tmp_ts;
}

/* START OF GLOUVAIN INSTRUMENTATION */
probe process("libmultinet.so").mark("glouvain_start")
{
  start = gettimeofday_ms();
  dataset = user_string($arg1);
  printf("glouvain,%s,", dataset);
}

probe process("libmultinet.so").function("glouvain_modularity")
{
  system(sprintf("cat /proc/%d/status > telemetry/glouvain_%s.log", pid(), dataset));
}

probe process("libmultinet.so").mark("glouvain_end")
{
  printf("%d\n", timestamp(start));
  delete tmp_ts;
}

/* START OF PMM INSTRUMENTATION */
probe process("libmultinet.so").mark("pmm_start")
{
  start = gettimeofday_ms();
  dataset = user_string($arg1);
  printf("pmm,%s,", dataset);
}

probe process("libmultinet.so").function("pmm_kmeans_start")
{
  system(sprintf("cat /proc/%d/status > telemetry/glouvain_%s.log", pid(), dataset));
}

probe process("libmultinet.so").mark("pmm_end")
{
  printf("%d\n", timestamp(start));
  delete tmp_ts;
}
